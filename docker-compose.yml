version: '3.5'
services:
  eureka-server:
    build: eureka-server
    image: eureka-server:1.0.0
    ports:
      - 8761:8761 
    networks:
      - fitness_ntwrk
      
  database-user-service:
    build: user-postgresql
    image: user_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  database-product-service:
    build: product-postgresql
    image: product_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  database-audit-service:
    build: audit-postgresgl
    image: audit_postgresgl:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  pgadmin:
    build: pgadmin
    image: fitness_pgadmin:1.0.0
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "82:80"
    networks:
      - fitness_ntwrk
  swagger-ui:
    build: swagger-ui
    image: fitness_swagger-ui:1.0.0
    ports:
      - "81:8080"
    networks:
      - fitness_ntwrk
  

      
  user-service:
    container_name: user-service
    build: user-service
    image: fitness_user-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_USER}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - eureka-server
      - database-user-service
      
    networks:
      - fitness_ntwrk
  product-service:
    container_name: product-service
    build: product-service
    image: fitness_product-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_PRODUCT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - database-product-service
      - eureka-server
    networks:
      - fitness_ntwrk
  mail-service:
    container_name: mail-service
    build: mail-service
    image: fitness_mail-service:1.0.0
    environment:
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on: 
      - eureka-server
    networks:
      - fitness_ntwrk
  audit-service:
    container_name: audit-service
    build: audit-service
    image: fitness_audit-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_AUDIT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - database-audit-service
      - eureka-server
    networks:
      - fitness_ntwrk
  proxy:
    build: proxy
    image: fitness_proxy:1.0.0
    ports:
      - "8080:8080"
    networks:
      - fitness_ntwrk
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      - fitness_ntwrk


networks:
  fitness_ntwrk:
    name: fitness_ntwrk