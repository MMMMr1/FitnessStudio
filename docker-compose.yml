version: '3.5'
services:
  eureka-server:
    build: eureka-server
    image: eureka-server:1.0.0
    ports:
      - 8761:8761 
    networks:
      - fitness_ntwrk
      
  database-user-service:
    build: user-postgresql
    image: user_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  database-product-service:
    build: product-postgresql
    image: product_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  database-audit-service:
    build: audit-postgresgl
    image: audit_postgresgl:1.0.0
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - fitness_ntwrk
  pgadmin:
    build: pgadmin
    image: fitness_pgadmin:1.0.0
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "82:80"
    networks:
      - fitness_ntwrk
  swagger-ui:
    build: swagger-ui
    image: fitness_swagger-ui:1.0.0
    ports:
      - "81:8080"
    networks:
      - fitness_ntwrk
      
  user-service:
    container_name: user-service
    build: user-service
    image: fitness_user-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_USER}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - eureka-server
      - database-user-service
      - broker
      
    networks:
      - fitness_ntwrk
  product-service:
    container_name: product-service
    build: product-service
    image: fitness_product-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_PRODUCT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - database-product-service
      - eureka-server
    networks:
      - fitness_ntwrk
  mail-service:
    container_name: mail-service
    build: mail-service
    image: fitness_mail-service:1.0.0
    environment:
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on: 
      - eureka-server
      - broker
    networks:
      - fitness_ntwrk
      
  audit-service:
    container_name: audit-service
    build: audit-service
    image: fitness_audit-service:1.0.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_AUDIT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
    depends_on:
      - database-audit-service
      - eureka-server
    networks:
      - fitness_ntwrk
  proxy:
    build: proxy
    image: fitness_proxy:1.0.0
    ports:
      - "8080:8080"
    networks:
      - fitness_ntwrk
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      - fitness_ntwrk

  grafana:
    image: grafana/grafana:latest 
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD} 
    networks:
      - fitness_ntwrk
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - fitness_ntwrk

  broker:
    image: confluentinc/cp-server:5.4.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
    networks:
      - fitness_ntwrk

  kafka-tools:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka-tools
    container_name: kafka-tools
    command: ["tail", "-f", "/dev/null"]
    network_mode: "host" 

  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    networks:
      - fitness_ntwrk

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - fitness_ntwrk

networks:
  fitness_ntwrk:
    name: fitness_ntwrk